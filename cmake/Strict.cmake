function(config_strict_target target_name)
	set_target_properties("${target_name}" PROPERTIES CXX_STANDARD 20)
	if (MSVC)
    target_compile_options("${target_name}" PRIVATE "/Wall" "/W4")
		target_compile_options("${target_name}" PRIVATE "/wd4201")		# non-standard extensions used
  elseif (CMAKE_CXX_COMPILER_ID MATCHES "[Cc]lang")
		target_compile_options("${target_name}" PRIVATE "-Wall" "-Wextra" "-Wpedantic" "-Werror")
    target_compile_options("${target_name}" PRIVATE "-Wno-error=deprecated-builtins" "-Wno-error=deprecated-volatile")
    if (BROCCOLI_SANITIZE)
      target_compile_options("${target_name}" PRIVATE "-fsanitize=address" "-fsanitize=undefined" "-fsanitize=leak")
      target_link_options("${target_name}" PRIVATE "-fsanitize=address" "-fsanitize=undefined" "-fsanitize=leak")
    endif()
  else()
		message(FATAL_ERROR "Unknown compiler: ${CMAKE_CXX_COMPILER_ID}")
	endif()
endfunction()

function(add_strict_executable target_name)
	list(SUBLIST ARGV 1 -1 target_file_list)
	add_executable("${target_name}" ${target_file_list})
	config_strict_target("${target_name}")
endfunction()

function(add_strict_library target_name target_type)
	list(SUBLIST ARGV 2 -1 target_file_list)
	add_library("${target_name}" "${target_type}" ${target_file_list})
	config_strict_target("${target_name}")
endfunction()
